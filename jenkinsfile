pipeline{  
		agent any 
 tools{
        maven 'maven'
        nodejs 'node 21.5'
        }
 
 stages{
	
          
    stage('Build Backend'){
            steps{
                dir('java/jtqj'){
                sh 'mvn clean install -DskipTest'
                }
            }
    }
    stage('Test Backend'){
            steps{
                dir('java/jtqj'){
                sh 'mvn test -Dmaven.install.skip=true'
                }
            }
    }
    stage('Sonar Backend'){
            steps{
                dir('java/jtqj'){
                    withSonarQubeEnv('SonarQube_server') {
                    sh 'mvn verify sonar:sonar -Dskiptest -Dmaven.install.skip=true'
                }
                }
            }
    }
      
    
    stage('Build Front'){
        steps{
            dir('angular'){
                sh 'npm install --force|
                wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb |
                |dpkg -i google-chrome-stable_current_amd64.deb'
                sh 'npm i -g @angular/cli'
            }
        }
    }
    stage('Test Front'){
        steps{
            dir('angular/src'){
                sh 'npm run test-headless'
            }
        }
    }
    stage('Sonar Front'){
        steps{
            dir('Sonar Front'){
               withSonarQubeEnv('SonarQube_server') {
                   sh 'npx sonar-scanner -Dsonar.sources="."'
                }
            }
        }
    }
  }
}
